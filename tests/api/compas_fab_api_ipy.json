{
  "metadata": {
    "compas_fab_version": "1.0.0-20436a91",
    "generated_on": "20240220"
  },
  "modules": {
    "compas_fab": [
      "get"
    ],
    "compas_fab.backends": [
      "ABB_IRB4600_40_255Kinematics",
      "AnalyticalInverseKinematics",
      "AnalyticalPlanCartesianMotion",
      "BackendError",
      "CancellableFutureResult",
      "CartesianMotionError",
      "FutureResult",
      "InverseKinematicsError",
      "KinematicsError",
      "MoveItPlanner",
      "OffsetWristKinematics",
      "RosClient",
      "RosError",
      "RosFileServerLoader",
      "RosValidationError",
      "SphericalWristKinematics",
      "Staubli_TX260LKinematics",
      "UR10Kinematics",
      "UR10eKinematics",
      "UR3Kinematics",
      "UR3eKinematics",
      "UR5Kinematics",
      "UR5eKinematics"
    ],
    "compas_fab.robots": [
      "AttachedCollisionMesh",
      "BoundingVolume",
      "CollisionMesh",
      "ConfigurationTarget",
      "Constraint",
      "ConstraintSetTarget",
      "DeviationVectorsGenerator",
      "Duration",
      "FrameTarget",
      "FrameWaypoints",
      "Inertia",
      "JointConstraint",
      "JointTrajectory",
      "JointTrajectoryPoint",
      "OrientationConstraint",
      "OrthonormalVectorsFromAxisGenerator",
      "PlanningScene",
      "PointAxisTarget",
      "PointAxisWaypoints",
      "PositionConstraint",
      "ReachabilityMap",
      "Robot",
      "RobotLibrary",
      "RobotSemantics",
      "Target",
      "Tool",
      "Trajectory",
      "Waypoints",
      "Wrench",
      "to_degrees",
      "to_radians"
    ],
    "compas_fab.sensors": [
      "PosCon3D",
      "PosConCM",
      "ProtocolError",
      "SensorTimeoutError",
      "SerialSensor"
    ],
    "compas_fab.utilities": [
      "LazyLoader",
      "allclose",
      "arange",
      "argmax",
      "argmin",
      "argsort",
      "clamp",
      "diffs",
      "list_files_in_directory",
      "map_range",
      "range_geometric_row",
      "read_csv_to_dictionary",
      "read_data_from_json",
      "read_data_from_pickle",
      "sign",
      "write_data_to_json",
      "write_data_to_pickle"
    ]
  }
}